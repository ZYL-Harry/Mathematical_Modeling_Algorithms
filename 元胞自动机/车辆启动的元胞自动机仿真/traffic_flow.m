%%车辆启动元胞自动机仿真
N=20;   %车辆总数
R=zeros(1,100);%初始化R矩阵
R(N+2:100)=1;%将R矩阵的N+2到100位初始化为1，“1”代表白色，“0”代表黑色，“0.5”代表灰色
R(N+1)=0.5;%将R矩阵第N+1位初始化为0.5，路口颜色
imshow(R,'InitialMagnification','fit');%显示图像，并且图片适应屏幕的大小

%%初始化时间、位置
C(1,:)=zeros(1,N);%表示时间变化（临时设置）
C(2,:)=(N:-1:1);%表示启动等待时间
C(3,:)=(1:N);%表示车辆的实时位置，此时表示初始位置
D=mat2cell(C,3,ones(1,N));%生成元胞数组D，将每组的时间、初始位置（用于判断车辆加速多久）、实时位置放为一组（3*1）

t=20;%总的运行时间
for k=1:t
    pause(1);%暂停时间
     
    %%重新设置新一次的时间、位置并组成元胞
    C(1,:)=k; %更新当前时间
    temp1=C(3,:);%表示记录原来车的位置
    D=mat2cell(C,3,ones(1,N));
    
    temp2=cellfun(@traffic_flow_function,D);%表示实时更新车辆的位置
    %其中D(1)代表的是某一个位置上的第一个分量
    %例如D中第一个元胞为[3,20,1],D(1)=3
     
    %%重新标识
    for j=1:N 
        R(temp1(j))=1;%表示释放原来车的位置
        R(temp2(j))=0;%表示更新车的实时位置
        R(21)=0.5; %如果车到路口的位置，保持路口的颜色标志
    end
     
    C(3,:)=temp2;%更新状态矩阵，给下一次使用
    imshow(R,'InitialMagnification','fit');%图片适应屏幕的大小
end